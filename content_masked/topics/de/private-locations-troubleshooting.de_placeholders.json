{
  "[URL_BASE_TOPICS]": "/support/kb/",
  "[FRONTMATTER_TRANSLATIONKEY]": "https://www.uptrends.com/support/kb/synthetic-monitoring/checkpoints/private-locations/private-locations-troubleshooting",
  "[LINK_URL_1]": "#verify-private-location-installation",
  "[LINK_URL_2]": "#smoke-test-your-setup",
  "[LINK_URL_3]": "#how-to-troubleshoot",
  "[LINK_URL_4]": "{{< ref path=\"support/kb/synthetic-monitoring/checkpoints/private-locations/install-docker-private-checkpoints#installation-steps\" lang=\"de\" >}}",
  "[LINK_URL_5]": "{{< ref path=\"support/kb/synthetic-monitoring/checkpoints/private-locations/install-docker-private-checkpoints#installation-script\" lang=\"de\" >}}",
  "[LINK_URL_6]": "#managing-running-containers",
  "[LINK_URL_7]": "{{< ref path=\"support/kb/synthetic-monitoring/checkpoints/private-locations/private-checkpoints-update-containers\" lang=\"de\" >}}",
  "[LINK_URL_8]": "{{< ref path=\"support/kb/synthetic-monitoring/checkpoints/private-locations/private-locations-data-protection\" lang=\"de\" >}}",
  "[LINK_URL_9]": "#dns-issues",
  "[LINK_URL_10]": "{{< ref path=\"support/kb/synthetic-monitoring/checkpoints/private-locations/private-locations-how-to-use#disable-a-private-checkpoint\" lang=\"de\" >}}",
  "[LINK_URL_11]": "{{< ref path=\"support/kb/synthetic-monitoring/checkpoints/private-locations/private-locations-checkpoint-health\" lang=\"de\" >}}",
  "[LINK_URL_12]": "{{< ref path=\"/support/kb/synthetic-monitoring/checkpoints/private-locations/install-docker-private-checkpoints\" lang=\"de\" >}}",
  "[LINK_URL_13]": "https://docs.docker.com/engine/manage-resources/pruning",
  "[LINK_URL_14]": "{{< ref path=\"contact\" lang=\"de\" >}}",
  "[SHORTCODE_1]": "{{< callout >}}",
  "[SHORTCODE_2]": "{{< /callout >}}",
  "[SHORTCODE_3]": "{{< callout >}}",
  "[SHORTCODE_4]": "{{< /callout >}}",
  "[SHORTCODE_5]": "{{< AppElement type=\"buttonSecondary\" >}}",
  "[SHORTCODE_6]": "{{< /AppElement >}}",
  "[SHORTCODE_7]": "{{< AppElement type=\"buttonSecondary\" >}}",
  "[SHORTCODE_8]": "{{< /AppElement >}}",
  "[CODE_BLOCK_1]": "```Docker exec -i checkpoint powershell```",
  "[CODE_BLOCK_2]": "```Docker exec -i checkpoint cmd```",
  "[CODE_BLOCK_3]": "```winver : The term 'winver' is not recognized```",
  "[CODE_BLOCK_4]": "```yaml\nTransactionProcessor:\n    container_name: TransactionProcessor\n    image: uptrends.azurecr.io/win2022/transaction-processor\n    deploy:\n      restart_policy:\n        condition: always\n    volumes:\n      - .\\Certificates:C:\\Uptrends\\Certificates:ro\n    logging:\n      driver: local\n    environment:\n      - ServerId=\n      - Password=\n    dns:\n      - 1.2.3.4\n      - 2.3.4.5\n```",
  "[INLINE_CODE_1]": "`Get-WindowsFeature | Where-Object {$_. installstate -eq \"installed\"}`",
  "[INLINE_CODE_2]": "` aus. \n3. Prüfe, ob „Containers“ in der Liste enthalten ist.\n\nPrüfe dann die Version von Docker:\n1. Öffne eine PowerShell-Konsole im Admin-Modus. \n2. Wechsle zum Ordner, in dem die docker-compose.yml-Datei abgelegt ist, und führe den Befehl `",
  "[INLINE_CODE_3]": "`Docker -v`",
  "[INLINE_CODE_4]": "` aus. \n3. Das Ergebnis sollte „Docker version 23.0.3, build 3e7cbfd“ ähneln.\n\nPrüfe als Drittes die Version von Docker Compose:\n1. Öffne eine PowerShell-Konsole im Admin-Modus. \n2. Wechsle zum Ordner, in dem die docker-compose.yml-Datei abgelegt ist, und führe den Befehl `",
  "[INLINE_CODE_5]": "`Docker-compose -v`",
  "[INLINE_CODE_6]": "` aus. \n3. Das Ergebnis sollte „Docker Compose version v2.17.2“ ähneln.\n\nWenn du denkst, dass etwas nicht stimmt, siehe dir das Installationsskript, install-checkpoint.ps1, an und führe die einzelnen Teile für die oben genannten Komponenten aus. Prüfe das Ergebnis.\n \n### Container Images\nWenn alle Grundvoraussetzungen eingerichtet sind, lädt das [Installationsskript]([LINK_URL_5]) die Uptrends Container Images von Azure herunter. Diese Images sind groß, da jedes eine komprimierte Installation eines Windows Servers enthält. Der Download kann mehrere Minuten (20 Minuten wäre nicht ungewöhnlich) dauern, abhängig vom Netzwerkdurchsatz. Teile der Images werden bei einem Update wiederverwendet, sodass nachfolgende Downloads schneller erfolgen. Ist der Download erfolgt, kannst du dies verifizieren, indem du den Befehl `",
  "[INLINE_CODE_7]": "`docker images`",
  "[INLINE_CODE_8]": "` [ausführst]([LINK_URL_6]). Du solltest drei Einträge sehen.\n\nDer Download der Images stützt sich auf in Docker enthaltene Funktionen und ist ein stabiler Prozess, bei dem ein Verbindungsausfall kein Problem sein sollte. Sollte der Download jedoch fehlschlagen, ist möglicherweise eine (lokale) Firewall die Ursache, die Docker daran hindert, auf das Azure Container Repository über azurecr.io, das von Microsoft gehostet wird, zuzugreifen.\n\nZur Authentifizierung beim Download der Images gibt das Installationsskript über die Docker-Anmeldung die Anmeldedaten an. Bei Problemen mit der Authentifizierung rufe das Installationsverzeichnis (der Ordner, der die Datei install-checkpoint.ps1 enthält) auf und führe die folgenden Befehle in PowerShell aus, um:\n\nbestehende Anmeldedaten zu löschen, nutze\n`",
  "[INLINE_CODE_9]": "`Docker logout`",
  "[INLINE_CODE_10]": "`\n\ndie registry-login.ps1 erneut auszuführen und das Ergebnis des Befehls zu prüfen, nutze\n`",
  "[INLINE_CODE_11]": "`.\\registry-login.ps1`",
  "[INLINE_CODE_12]": "`\n\n### Auto-run und Auto-update\nDamit die Container-Checkpoints ausgeführt werden, wird ein geplanter Task erzeugt, um das Skript start-containers.ps1 nach dem Hochfahren des Servers auszuführen. Damit die Docker Images für die Container-Checkpoints [auf dem neuesten Stand bleiben]([LINK_URL_7]), wird ein zweiter geplanter Task erzeugt, um regelmäßig auf Image Updates zu prüfen. Prüfe die Ausgabe des PowerShell-Befehls `",
  "[INLINE_CODE_13]": "`Get-ScheduledTask`",
  "[INLINE_CODE_14]": "`, um zu bestätigen, dass diese Tasks bestehen. Sie heißen „Start Checkpoint Containers“ und „Update Checkpoint Images“. \n\nDu kannst die Benutzeroberfläche Windows Scheduled Task nutzen, um die Tasks zu untersuchen, Verläufe und Fehlschläge anzuzeigen oder den Task manuell anzustoßen, um Fehler zu beheben. Verwende das Installationsskript (install-checkpoint.ps1), um bei Bedarf diesen Teil der Installation erneut auszuführen.\n\n### Konfiguration\nAlle serverspezifischen Konfigurationen sind in der Konfigurationsdatei Docker-compose.yml enthalten. Diese Datei listet alle drei Container Images und ihre jeweiligen Einstellungen. Diese Konfigurationsdatei enthält bereits alle notwendigen Einstellungen, wenn du sie herunterlädst. Am wichtigsten ist die `",
  "[INLINE_CODE_15]": "`ServerId/Password`",
  "[INLINE_CODE_16]": "`-Kombination, die für alle drei Container Images, die in der Datei gelistet sind, konfiguriert sein sollte (d. h. dieselbe Kombination der Credentials ist in der yml-Datei dreimal mit denselben Werten vorhanden). \n\n[SHORTCODE_1] Die *ServerId* und das *Password* sind für den Container-Checkpoint eindeutig. Mehrere Container-Checkpoint-Server sollten niemals dieselbe *ServerId* haben. [SHORTCODE_2]\n\nDie Docker Compose-Datei kann verwendet werden, um Checkpoint-spezifische [Datenschutzrichtlinien]([LINK_URL_8]) und [umgebungsspezifische DNS-Regeln]([LINK_URL_9]) zu konfigurieren.\n \n### Aktueller Status\nNach der Installation werden die Container für alle drei Images gestartet. Sie sollten dann ununterbrochen ausgeführt werden. Du kannst den Status anhand des Befehls `",
  "[INLINE_CODE_17]": "`docker ps`",
  "[INLINE_CODE_18]": "` prüfen. In der rechten Spalte siehst du, ob die Container tatsächlich ausgeführt werden. Sollte es ein Problem geben, verwende diese Befehle, um zur weiteren Diagnose die Protokolldateien einzusehen:\n\n\n– Aktueller Status von allen Containern\n`",
  "[INLINE_CODE_19]": "`Docker ps`",
  "[INLINE_CODE_20]": "`\n\n- Protokolle für den Checkpoint Agent-Container abrufen und in Datei schreiben\n`",
  "[INLINE_CODE_21]": "`Docker logs Checkpoint | Out-File Docker_CS.txt`",
  "[INLINE_CODE_22]": "`\n\n- Protokolle für den Transaction Processor-Container abrufen und in Datei speichern\n`",
  "[INLINE_CODE_23]": "`Docker logs TransactionProcessor | Out-File Docker_TP.txt`",
  "[INLINE_CODE_24]": "`\n\n- Alternativ alle Protokolle für die Container kombiniert speichern\n`",
  "[INLINE_CODE_25]": "`Docker-compose logs -t -n 5000 | Out-File Docker.txt`",
  "[INLINE_CODE_26]": "`\n\n## Smoke Test deiner Einrichtung\n\nSobald die Container Checkpoints installiert sind, sind sie bereit, Messungen auszuführen. Uptrends’ interne Prozesse wechseln automatisch den Wartungsstatus eines Container-Checkpoints, je nach Zustand. Ein Checkpoint, bei dem alles in Ordnung ist, wird auf „Aktiv“ gesetzt, ein Checkpoint, bei dem es ein Problem gibt, wird auf „Deaktiviert“ gesetzt. \n\nCheckpoints aktualisieren ihren Zustand jede Minute. Du kannst Checkpoints aktivieren oder [deaktivieren]([LINK_URL_10]) (zum Beispiel zur Wartung oder um die Einrichtung zu testen). Nutze dazu die Benutzeroberfläche unter Private Locations in der Uptrends Webanwendung. Der Standardstatus ist „aktiviert“. \n\nEinen Container-Checkpoint einem Smoke Test zu unterziehen, geht am besten über die Schaltfläche [SHORTCODE_5] Jetzt testen [SHORTCODE_6]. Idealerweise führst du dies für jeden Prüfobjekttyp durch, den du mit ihm nutzen möchtest. \n\nNutze [Checkpoint-Zustand]([LINK_URL_11]) im Bereich Private Locations, um den Zustand problematischer Checkpoints zu festzustellen. \n\nBeachte, dass alle Messungen „in“ einem Container ablaufen. Du wirst nicht sehen, dass ein Browser auf dem Host-Rechner aufgerufen wird, wenn du die Schaltfläche [SHORTCODE_7] Jetzt testen [SHORTCODE_8] für einen FPC oder eine Transaktion nutzt.\n\nBerücksichtige auch, dass ein neuer Checkpoint Messungen aufnimmt, sobald die Installation beendet ist, wenn du einen Checkpoint, der Teil einer Checkpoint-Auswahl aktiver Prüfobjekte ist, zu einem bestehenden privaten Standort hinzufügst. Sollte das nicht gewünscht sein (wenn du beispielsweise erst testen möchtest), deaktiviere den Checkpoint im Uptrends Bereich Private Locations.\n\n\n## Probleme beheben\n\n### Container stoppen, starten und neu starten\nFühre einen Neustart von Containern aus, die mit der Datei Docker-compose.yaml im aktuellen Verzeichnis verknüpft sind. Das ist üblicherweise der Ordner C:\\uptrends\\:\n\n1. Öffne eine PowerShell-Konsole im Admin-Modus. \n2. Wechsle zum Ordner, in dem die docker-compose.yml-Datei abgelegt ist, und führe einen oder alle der folgenden Befehle aus.\n- Um zu starten, gib `",
  "[INLINE_CODE_27]": "` in die Befehlszeile ein. \n- Um zu stoppen, gib `",
  "[INLINE_CODE_28]": "` in die Befehlszeile ein. \n- Um neu zu starten, gib `",
  "[INLINE_CODE_29]": "` in die Befehlszeile ein.\n\n\n[SHORTCODE_3] **Tipp**: Mache Gebrauch von der Docker-Hilfe. Zu allen Befehlen erfährst du mehr, indem du den Befehl *docker - -help* eingibst. Dieser Befehl zeigt alle Befehle mit einer allgemeinen Hilfe für alle verschiedenen Befehle an. Du kannst auch zu einem bestimmten Befehl eine Hilfe aufrufen, indem du *docker image - -help* eingibst.[SHORTCODE_4]\n\n\n### Ausgeführte Container verwalten\nUm eine Liste der Container, die ausgeführt werden, zu erhalten, gib den Befehl `",
  "[INLINE_CODE_30]": "`docker ps`",
  "[INLINE_CODE_31]": "` ein. Damit wird eine containerId angezeigt, die mit anderen Befehlen für diesen Container verwendet werden kann. \n\nUm eine Liste aller lokalen Images zu erhalten, führe den Befehl `",
  "[INLINE_CODE_32]": "`docker images`",
  "[INLINE_CODE_33]": "` aus. Beachte den Plural, „images“: alle Befehle für ein Image werden mit „image“ (singular) ausgeführt.\n\nImages können recht groß werden. Um Speicherplatz freizugeben, kannst du den Befehl `",
  "[INLINE_CODE_34]": "`docker image prune`",
  "[INLINE_CODE_35]": "` nutzen, um Images zu entfernen, die nicht mehr von aktiven Containern genutzt werden. Oder verwende `",
  "[INLINE_CODE_36]": "`docker image rm <containerid>`",
  "[INLINE_CODE_37]": "`, um einen bestimmten Container zu entfernen.\n\n### Entfernen nicht verwendeter Docker-Objekte\n\nDas [Uptrends Installationsskript für Private Locations]([LINK_URL_12]) enthält keine Einstellungen zum automatischen Entfernen nicht verwendeter Docker-Objekte. Um nicht verwendete Docker-Objekte zu entfernen, lies die Dokumentation [Prune unused Docker objects]([LINK_URL_13]). Solltest du andere Plattformen nutzen, zum Beispiel Kubernetes, ziehe bitte deren offizielle Dokumentation zurate.\n\n### Befehlszeilen-/Shell-Zugriff in einem Container erhalten\nFühre diesen Befehl aus, um eine PowerShell oder einen Befehlszeilenprozess im Container zu starten. Damit kann das Dateisystem in den Containern schnell gelesen werden. Verwende den Befehl [CODE_BLOCK_1] oder [CODE_BLOCK_2].\n\nBist du nicht sicher, ob du dich im oder außerhalb eines Containers befindest? Gib in die Windows-Befehlszeile `",
  "[INLINE_CODE_38]": "`winver`",
  "[INLINE_CODE_39]": "` ein. Bis du in einem Container, wird es wie folgt aussehen: \n\n[CODE_BLOCK_3] \n\nBefindest du dich auf dem Host, wird das Pop-up Windows **Info** angezeigt.\nWenn du die PowerShell oder Befehlszeile im Container verlassen und zum Host zurückkehren möchtest, nutze Ctrl+C.\n\n### Protokoll lesen\n\n1. Öffne eine PowerShell-Konsole im Admin-Modus. \n2. Wechsle zu dem Ordner, in dem die docker-compose.yml-Datei abgelegt ist, und führe einen der folgenden Befehle aus.\n- Gib für Log Output `",
  "[INLINE_CODE_40]": "` in die Befehlszeile ein. \n- Oder, wenn du dies in einer Datei namens containerlogs.log speichern möchtest, gib `",
  "[INLINE_CODE_41]": "`Docker-compose logs -t -n 5000 > containerlogs.log`",
  "[INLINE_CODE_42]": "` ein.\n\n### Netzwerk\nBeim Start wird Docker ein virtuelles Netzwerk auf dem Host erstellen, mit dem die Container verbunden werden. Sie erhalten eine IP-Adresse. \nBestehende Netzwerke kannst du in Powershell mit `",
  "[INLINE_CODE_43]": "`docker network ls`",
  "[INLINE_CODE_44]": "` anzeigen und ein bestimmtes Netzwerk mit `",
  "[INLINE_CODE_45]": "`docker network inspect <<network name>>`",
  "[INLINE_CODE_46]": "`. Um das Netzwerk zu finden, in dem sich ein Container befindet, verwende `",
  "[INLINE_CODE_47]": "`docker inspect <<container name>>`",
  "[INLINE_CODE_48]": "` (und `",
  "[INLINE_CODE_49]": "`docker ps`",
  "[INLINE_CODE_50]": "`, um Container-Namen zu finden).\n\nAlle drei Uptrends Docker Container (Checkpoint, CheckpointRelay, TransactionProcessor) müssen in der Lage sein, eine Verbindung zu Uptrends über probemaster1.uptrends.com und probemaster2.uptrends.com aufzubauen. Sowohl der Checkpoint als auch der CheckpointRelay Container, müssen in der Lage sein, mit deinen zu testenden Anwendungen zu verbinden.\n\n### DNS-Probleme\n\nEin häufiger Grund für Verbindungsprobleme ist die DNS-Auflösung. Folge diesen Schritten zur Fehlerbehebung:\n\n1. Auf dem Host sollte `",
  "[INLINE_CODE_51]": "`nslookup probemaster1.uptrends.com`",
  "[INLINE_CODE_52]": "` 95.211.70.204 ausgeben. Sollte das nicht der Fall sein, können die Container keine Verbindung zu Uptrends herstellen.\n\n2. Unter der Voraussetzung, dass die Container ausgeführt werden (prüfe dies mit `",
  "[INLINE_CODE_53]": "`docker ps`",
  "[INLINE_CODE_54]": "`), rufe PowerShell in einem Container auf: `",
  "[INLINE_CODE_55]": "`docker exec -i Checkpoint powershell.exe`",
  "[INLINE_CODE_56]": "`.\n\n3. Sobald du dich im Container befindest, sollte `",
  "[INLINE_CODE_57]": "`nslookup probemaster1.uptrends.com`",
  "[INLINE_CODE_58]": "` ebenfalls 95.211.70.204 ausgeben. Erweist sich dies als erfolgreich, sollte der Container in der Lage sein, eine Verbindung zur Uptrends Cloud-Plattform herstellen.\n\n4. Versuche dasselbe für einen Hostnamen einer internen Anwendung, etwa `",
  "[INLINE_CODE_59]": "`nslookup <<name application>>`",
  "[INLINE_CODE_60]": "`docker exec -i Checkpoint powershell.exe`",
  "[INLINE_CODE_61]": "`, um eine PowerShell im Checkpoint Container aufzurufen) und verifiziere den bzw. die konfigurierten DNS-Server.\n\nVersuche, ein öffentliches DNS wie 8.8.8.8 (Google) anzugeben, wenn du ein nslookup ausführst: `",
  "[INLINE_CODE_62]": "`nslookup probemaster1.uptrends.com 8.8.8.8`"
}